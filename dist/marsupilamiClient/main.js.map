{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/friend-list/friend-list.component.css","webpack:///./src/app/friend-list/friend-list.component.html","webpack:///./src/app/friend-list/friend-list.component.ts","webpack:///./src/app/friend.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/marsupilami-details/marsupilami-details.component.css","webpack:///./src/app/marsupilami-details/marsupilami-details.component.html","webpack:///./src/app/marsupilami-details/marsupilami-details.component.ts","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.css","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.html","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.ts","webpack:///./src/app/marsupilami-list/marsupilami-list.component.css","webpack:///./src/app/marsupilami-list/marsupilami-list.component.html","webpack:///./src/app/marsupilami-list/marsupilami-list.component.ts","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.css","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.html","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.ts","webpack:///./src/app/marsupilami.service.ts","webpack:///./src/app/marsupilami.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { MarsupilamiDetailsComponent } from './marsupilami-details/marsupilami-details.component';\r\nimport { MarsupilamiListComponent } from './marsupilami-list/marsupilami-list.component';\r\nimport { MarsupilamiEditComponent } from './marsupilami-edit/marsupilami-edit.component';\r\nimport { MarsupilamiRegistrationComponent } from './marsupilami-registration/marsupilami-registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './auth-guard.service';\r\nimport { FriendListComponent } from './friend-list/friend-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'registration', component: MarsupilamiRegistrationComponent },\r\n  { path: 'edit_marsupilami/:id', canActivate: [AuthGuard], component: MarsupilamiEditComponent },\r\n  { path: 'marsupilamis', canActivate: [AuthGuard], component: MarsupilamiListComponent },\r\n  { path: 'amis', canActivate: [AuthGuard], component: FriendListComponent },\r\n  { path: 'marsupilamis/:id', canActivate: [AuthGuard], component: MarsupilamiDetailsComponent },\r\n  { path: '', redirectTo: 'marsupilamis', pathMatch: 'full'},\r\n  { path: '**', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<nav>\\r\\n  <div class=\\\"nav-wrapper grey darken-4\\\">\\r\\n    <app-header></app-header>\\r\\n  </div>\\r\\n</nav>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Marsupilami } from './marsupilami';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'marsupilamiClient';\r\n  currentUser: Marsupilami;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MarsupilamiService } from './marsupilami.service';\r\nimport { MarsupilamiListComponent } from './marsupilami-list/marsupilami-list.component';\r\nimport { MarsupilamiDetailsComponent } from './marsupilami-details/marsupilami-details.component';\r\nimport { MarsupilamiEditComponent } from './marsupilami-edit/marsupilami-edit.component';\r\nimport { MarsupilamiRegistrationComponent } from './marsupilami-registration/marsupilami-registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FriendListComponent } from './friend-list/friend-list.component';\r\nimport { FriendService } from './friend.service';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AuthGuard } from './auth-guard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MarsupilamiListComponent,\r\n    MarsupilamiDetailsComponent,\r\n    MarsupilamiEditComponent,\r\n    MarsupilamiRegistrationComponent,\r\n    LoginComponent,\r\n    NotFoundComponent,\r\n    HeaderComponent,\r\n    FriendListComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ MarsupilamiService, FriendService, AuthenticationService, AuthGuard ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private router: Router) { }\r\n\r\n    canActivate() {\r\n      this.authService.emitCredentials();\r\n      if (this.authService.isAuth) {\r\n          return true;\r\n      }\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Marsupilami } from './marsupilami';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  isAuth: boolean;\r\n  isAuthChange: Subject<boolean> = new Subject<boolean>();\r\n  currentUser: Marsupilami;\r\n  isCurrentUser: Subject<Marsupilami> = new Subject<Marsupilami>();\r\n\r\n  private apiLogin = '/api/login';\r\n  private apiLogout = '/api/logout';\r\n  constructor(private http: HttpClient) {\r\n    this.currentUser = null;\r\n    this.isAuth = false;\r\n  }\r\n\r\n  emitCredentials() {\r\n    this.isAuthChange.next(this.isAuth);\r\n    this.isCurrentUser.next(this.currentUser);\r\n  }\r\n\r\n  login(body: any): Observable<any> {\r\n    this.isAuth = true;\r\n    this.emitCredentials();\r\n    return this.http.post(`${this.apiLogin}`, body);\r\n  }\r\n\r\n  logout() {\r\n    this.isAuth = false;\r\n    this.currentUser = null;\r\n    this.emitCredentials();\r\n    return this.http.get(`${this.apiLogout}`);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"collection\\\" *ngFor=\\\"let m of friends | async\\\">\\r\\n  <li class=\\\"collection-item avatar\\\">\\r\\n    <span class=\\\"title\\\">Nom: {{ m.login }}</span>\\r\\n    <p>Famille: {{ m.famille }}<br>\\r\\n      Race: {{ m.race }}<br>\\r\\n      Nourriture: {{ m.nourriture }}<br>\\r\\n    </p>\\r\\n    <a [routerLink]=\\\"['/marsupilamis/', m._id]\\\" class=\\\"btn-floating btn-large waves-effect waves-light yellow accent-4 black-text\\\">Voir</a>\\r\\n  </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { FriendService } from '../friend.service';\r\n\r\n@Component({\r\n  selector: 'app-friend-list',\r\n  templateUrl: './friend-list.component.html',\r\n  styleUrls: ['./friend-list.component.css']\r\n})\r\nexport class FriendListComponent implements OnInit {\r\n  friends: Observable<Marsupilami[]>;\r\n  constructor(private friendService: FriendService) { }\r\n\r\n  ngOnInit() {\r\n    this.getFriends();\r\n  }\r\n  getFriends(): any {\r\n    this.friends = this.friendService.getFriends();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Marsupilami } from './marsupilami';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendService {\r\n  private friends: Marsupilami[];\r\n  private apiFriends = '/api/amis';\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getFriends(): Observable<Marsupilami[]> {\r\n    return this.http.get<Marsupilami[]>(`${this.apiFriends}`);\r\n  }\r\n\r\n  addFriend(newMarsupilami: Marsupilami): Observable<any> {\r\n    return this.http.post(`${this.apiFriends}/${newMarsupilami._id}`, newMarsupilami);\r\n  }\r\n\r\n  deleteFriend(marsupilami: Marsupilami): Observable<Marsupilami> {\r\n    return this.http.delete<Marsupilami>(`${this.apiFriends}/${marsupilami._id}`);\r\n  }\r\n\r\n}\r\n","module.exports = \".logo {\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n}\"","module.exports = \"<a ref=\\\"#!\\\" class=\\\"brand-logo left\\\"><img class=\\\"logo \\\"src=\\\"../../assets/images/marsupilami.png\\\"/></a>\\r\\n<a href=\\\"#!\\\" class=\\\"brand-logo center\\\">MarsupilAmi</a>\\r\\n<ul class=\\\"right hide-on-med-and-down\\\">\\r\\n  <li><a routerLink=\\\"/login\\\" *ngIf=\\\"!isAuth\\\">Login</a></li>\\r\\n  <li><a (click)=\\\"onLogout()\\\" *ngIf=\\\"isAuth\\\">Logout</a></li>\\r\\n  <li><a routerLink=\\\"/registration\\\" *ngIf=\\\"!isAuth\\\">Inscription</a></li>\\r\\n  <li><a routerLink=\\\"/registration\\\" *ngIf=\\\"isAuth\\\">Inscrire ami</a></li>\\r\\n  <li><a routerLink=\\\"/marsupilamis/{{ currentUser._id }}\\\" *ngIf=\\\"isAuth\\\">{{currentUser.login}}</a></li>\\r\\n  <li><a routerLink=\\\"/edit_marsupilami/{{ currentUser._id }}\\\" *ngIf=\\\"isAuth\\\">Editer</a></li>\\r\\n  <li><a routerLink=\\\"/amis\\\" *ngIf=\\\"isAuth\\\">Amis</a></li>\\r\\n  <li><a routerLink=\\\"/marsupilamis\\\" *ngIf=\\\"isAuth\\\">Marsupilamis</a></li>\\r\\n</ul>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  authSubscription: Subscription;\r\n  userSubscription: Subscription;\r\n  currentUser: Marsupilami;\r\n  isAuth: boolean;\r\n\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.authSubscription = this.authService.isAuthChange.subscribe(\r\n      (status) => {\r\n        this.isAuth = status;\r\n      }\r\n    );\r\n    this.userSubscription = this.authService.isCurrentUser.subscribe(\r\n      (user) => {\r\n        this.currentUser = user;\r\n      }\r\n    );\r\n    this.authService.emitCredentials();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout().subscribe(\r\n      () => this.authService.emitCredentials(),\r\n      (err) => console.log(err),\r\n      () => this.router.navigate(['/login']));\r\n    }\r\n}\r\n","module.exports = \".row {\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n    padding: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col s4 offset-s4\\\">\\r\\n    <div class=\\\"center-align\\\">\\r\\n      <h4 class=\\\"grey darken-3 white-text z-depth-3\\\">Connexion: </h4>\\r\\n      <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"login\\\">Login:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\r\\n            id=\\\"login\\\" formControlName=\\\"login\\\">\\r\\n          <div *ngIf=\\\"!marsuForm.controls.login.valid && marsu.controls.login.dirty\\\">\\r\\n            Utilisateur inconnu\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"mdp\\\">Mot de passe: </label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\r\\n        </div>\\r\\n        <button class=\\\"btn waves-effect waves-light pulse yellow accent-4 black-text\\\" type=\\\"submit\\\" name=\\\"action\\\" [disabled]=\\\"!marsuForm.valid\\\">\\r\\n          Login\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MarsupilamiService } from '../marsupilami.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isAuth: boolean;\r\n  credentials: any;\r\n  marsupilami: Marsupilami;\r\n  marsuForm: FormGroup;\r\n\r\n  constructor(public marsupilamiService: MarsupilamiService,\r\n    public authenticationService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.authenticationService.emitCredentials();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.marsuForm = this.formBuilder.group({\r\n      login: ['', Validators.required],\r\n      mdp: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const formValues = this.marsuForm.value;\r\n    this.credentials = {\r\n    login: formValues.login,\r\n    mdp: formValues.mdp\r\n    };\r\n    this.authenticationService.login(this.credentials).subscribe((result) => {\r\n      this.marsupilami = result;\r\n      this.authenticationService.currentUser = this.marsupilami;\r\n      this.authenticationService.emitCredentials();\r\n      this.route.navigate(['/marsupilamis']);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"!marsupilami\\\">Chargement en cours...</p>\\r\\n<div class=\\\"card big\\\" *ngIf=\\\"marsupilami\\\">\\r\\n  <div class=\\\"card-content\\\">\\r\\n    <h4 class=\\\"grey darken-3 white-text\\\">Détails sur le Marsupilami:</h4>\\r\\n    <span class=\\\"card-title\\\">Nom: {{ marsupilami.login }}</span>\\r\\n    <p>Famille: {{ marsupilami.famille }}</p>\\r\\n    <p>Race: {{ marsupilami.race}}</p>\\r\\n    <p>Nourriture: {{ marsupilami.nourriture}}</p>\\r\\n    <div class=\\\"card-action\\\">\\r\\n      <a routerLink=\\\"/marsupilamis\\\" class=\\\"btn yellow accent-4 black-text btn-lg btn-primary center-align\\\">\\r\\n        Retour\\r\\n      </a>\\r\\n      <button (click)=\\\"addFriend(marsupilami)\\\" *ngIf=\\\"friendable\\\" class=\\\"btn yellow accent-4 black-text btn-lg btn-primary center-align\\\">\\r\\n        Ajouter\\r\\n      </button>\\r\\n      <button (click)=\\\"deleteFriend(marsupilami)\\\" *ngIf=\\\"unfriendable\\\" class=\\\"btn yellow accent-4 black-text btn-lg btn-primary center-align\\\">\\r\\n        Supprimer\\r\\n        </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MarsupilamiService } from '../marsupilami.service';\r\nimport { FriendService } from '../friend.service';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-marsupilami-details',\r\n  templateUrl: './marsupilami-details.component.html',\r\n  styleUrls: ['./marsupilami-details.component.css']\r\n})\r\nexport class MarsupilamiDetailsComponent implements OnInit {\r\n  userSubscription: Subscription;\r\n  currentUser: Marsupilami;\r\n  marsupilami: Marsupilami;\r\n  friendable: boolean;\r\n  unfriendable: boolean;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthenticationService,\r\n    private marsupilamiService: MarsupilamiService,\r\n    private friendService: FriendService) { }\r\n\r\n  ngOnInit() {\r\n    this.userSubscription = this.authService.isCurrentUser.subscribe(\r\n      (user) => {\r\n        this.currentUser = user;\r\n      }\r\n    );\r\n    this.getMarsuDetails();\r\n    this.authService.emitCredentials();\r\n  }\r\n\r\n  getMarsuDetails() {\r\n    this.route.params.subscribe(\r\n      params => this.marsupilamiService.getMarsupilami(params['id']).subscribe(\r\n        (data) => {\r\n          this.marsupilami = data;\r\n          if (this.marsupilami._id === this.currentUser._id || this.currentUser.friend_ids.includes(this.marsupilami._id)) {\r\n            this.friendable = false;\r\n            if (this.marsupilami._id !== this.currentUser._id) {\r\n              this.unfriendable = true;\r\n            } else {\r\n              this.unfriendable = false;\r\n            }\r\n          } else {\r\n              this.friendable = true;\r\n              this.unfriendable = false;\r\n            }\r\n        })\r\n    );\r\n  }\r\n\r\n  addFriend(marsupilami: any) {\r\n    this.friendService.addFriend(marsupilami).subscribe(\r\n      (data) => this.marsupilami = data\r\n    );\r\n    this.router.navigate(['amis']);\r\n  }\r\n\r\n  deleteFriend(marsupilami: any) {\r\n    this.friendService.deleteFriend(marsupilami).subscribe(\r\n      (data) => this.marsupilami = data\r\n    );\r\n    this.router.navigate(['amis']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"center-align\\\">\\r\\n  <h2 class=\\\"grey darken-3 white-text z-depth-3\\\">Inscription</h2>\\r\\n  <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"editMarsupilami()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"login\\\">Login:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\r\\n        id=\\\"login\\\" formControlName=\\\"login\\\">\\r\\n      <div *ngIf=\\\"!marsuForm.controls.login.valid && marsuForm.controls.login.dirty\\\">\\r\\n        Le nom du Marsupilami est obligatoire!\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"mdp\\\">Mot de passe: </label>\\r\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty\\\">\\r\\n      Le mot de passe est obligatoire!\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"date_naissance\\\">Date de Naissance:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"date_naissance\\\" formControlName=\\\"date_naissance\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"famille\\\">Famille: </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"famille\\\" formControlName=\\\"famille\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"race\\\">Race :</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"race\\\" formControlName=\\\"race\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"nourriture\\\">Nourriture: </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nourriture\\\" formControlName=\\\"nourriture\\\">\\r\\n    </div>\\r\\n    <button class=\\\"yellow accent-4 black-text btn waves-effect waves-light pulse\\\" type=\\\"submit\\\" name=\\\"action\\\" [disabled]=\\\"!marsuForm.valid\\\">\\r\\n      Modifier\\r\\n    </button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MarsupilamiService } from '../marsupilami.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-marsupilami-edit',\r\n  templateUrl: './marsupilami-edit.component.html',\r\n  styleUrls: ['./marsupilami-edit.component.css']\r\n})\r\nexport class MarsupilamiEditComponent implements OnInit {\r\n  marsupilami: Marsupilami;\r\n  marsupilami_id: any;\r\n  marsuForm: FormGroup;\r\n\r\n  constructor(public marsupilamiService: MarsupilamiService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.getMarsupilamisDetails();\r\n  }\r\n  getMarsupilamisDetails(): any {\r\n    this.route.params.subscribe(\r\n      params => this.marsupilamiService.getMarsupilami(params['id']).subscribe(\r\n        (data) => {\r\n          this.marsupilami_id = data._id;\r\n          this.marsuForm.controls['login'].setValue(data.login);\r\n          this.marsuForm.controls['mdp'].setValue(data.mdp);\r\n          this.marsuForm.controls['famille'].setValue(data.famille);\r\n          this.marsuForm.controls['date_naissance'].setValue(data.date_naissance);\r\n          this.marsuForm.controls['race'].setValue(data.race);\r\n          this.marsuForm.controls['nourriture'].setValue(data.nourriture);\r\n        }\r\n      ));\r\n  }\r\n\r\n  initializeForm() {\r\n    this.marsuForm = this.formBuilder.group({\r\n      login: ['', Validators.required],\r\n      mdp: ['', Validators.required],\r\n      date_naissance: ['', Validators.required],\r\n      famille: ['', Validators.required],\r\n      race: ['', Validators.required],\r\n      nourriture: ['', Validators.required],\r\n    });\r\n  }\r\n  editMarsupilami() {\r\n    const formValues = this.marsuForm.value;\r\n    this.marsupilami = new Marsupilami();\r\n    this.marsupilami._id = this.marsupilami_id;\r\n    this.marsupilami.login = formValues.login;\r\n    this.marsupilami.mdp = formValues.mdp;\r\n    this.marsupilami.date_naissance = formValues.date_naissance;\r\n    this.marsupilami.famille = formValues.famille;\r\n    this.marsupilami.race = formValues.race;\r\n    this.marsupilami.nourriture = formValues.nourriture;\r\n    this.marsupilamiService.editMarsupilami(this.marsupilami).subscribe(() => {\r\n        this.router.navigate(['marsupilamis']);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<ul class=\\\"collection\\\" *ngFor=\\\"let m of marsupilamis | async\\\">\\r\\n  <li class=\\\"collection-item avatar\\\">\\r\\n    <span class=\\\"title\\\">Nom: {{ m.login }}</span>\\r\\n    <p>Famille: {{ m.famille }}<br>\\r\\n      Race: {{ m.race }}<br>\\r\\n      Nourriture: {{ m.nourriture }}<br>\\r\\n    </p>\\r\\n    <a [routerLink]=\\\"['/marsupilamis/', m._id]\\\" class=\\\"btn-floating btn-large waves-effect waves-light yellow accent-4 black-text\\\">Voir</a>\\r\\n  </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { MarsupilamiService } from '../marsupilami.service';\r\n\r\n@Component({\r\n  selector: 'app-marsupilami-list',\r\n  templateUrl: './marsupilami-list.component.html',\r\n  styleUrls: ['./marsupilami-list.component.css']\r\n})\r\nexport class MarsupilamiListComponent implements OnInit {\r\n  marsupilamis: Observable<Marsupilami[]>;\r\n  constructor(private marsupilamiService: MarsupilamiService) { }\r\n\r\n  ngOnInit() {\r\n    this.getMarsupilamis();\r\n  }\r\n  getMarsupilamis(): any {\r\n    this.marsupilamis = this.marsupilamiService.getMarsupilamis();\r\n  }\r\n\r\n}\r\n","module.exports = \".row {\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\nh4 {\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\nbutton:disabled {\\r\\n    background-color: #fff9c4;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col s4 offset-s4\\\">\\r\\n    <div class=\\\"center-align\\\">\\r\\n      <h4 class=\\\"grey darken-3 white-text z-depth-3\\\">Inscription</h4>\\r\\n      <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"addMarsupilami()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"login\\\">Login:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\r\\n            id=\\\"login\\\" formControlName=\\\"login\\\">\\r\\n          <div *ngIf=\\\"!marsuForm.controls.login.valid && marsuForm.controls.login.dirty\\\">\\r\\n            Le nom du Marsupilami est obligatoire!\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"mdp\\\">Mot de passe: </label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty\\\">\\r\\n          Le mot de passe est obligatoire!\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"date_naissance\\\">Date de Naissance:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"date_naissance\\\" formControlName=\\\"date_naissance\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"famille\\\">Famille: </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"famille\\\" formControlName=\\\"famille\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"race\\\">Race :</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"race\\\" formControlName=\\\"race\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"nourriture\\\">Nourriture: </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nourriture\\\" formControlName=\\\"nourriture\\\">\\r\\n        </div>\\r\\n        <button class=\\\"btn waves-effect waves-light pulse yellow accent-4 black-text\\\" type=\\\"submit\\\" name=\\\"action\\\"\\r\\n          [disabled]=\\\"!marsuForm.valid\\\">\\r\\n          Inscription\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Marsupilami } from '../marsupilami';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MarsupilamiService } from '../marsupilami.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { FriendService } from '../friend.service';\r\n\r\n@Component({\r\n  selector: 'app-marsupilami-registration',\r\n  templateUrl: './marsupilami-registration.component.html',\r\n  styleUrls: ['./marsupilami-registration.component.css']\r\n})\r\nexport class MarsupilamiRegistrationComponent implements OnInit {\r\n  marsupilami: Marsupilami;\r\n  marsuForm: FormGroup;\r\n  currentUser: Marsupilami;\r\n\r\n  constructor(public marsupilamiService: MarsupilamiService,\r\n    public authenticationService: AuthenticationService,\r\n    public friendService: FriendService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.authenticationService.isCurrentUser.subscribe((data) => {\r\n      this.currentUser = data;\r\n    });\r\n    this.authenticationService.emitCredentials();\r\n  }\r\n\r\n  initializeForm() {\r\n    this.marsuForm = this.formBuilder.group({\r\n      login: ['', Validators.required],\r\n      mdp: ['', Validators.required],\r\n      date_naissance: ['', Validators.required],\r\n      famille: ['', Validators.required],\r\n      race: ['', Validators.required],\r\n      nourriture: ['', Validators.required],\r\n    });\r\n  }\r\n  addMarsupilami() {\r\n    const formValues = this.marsuForm.value;\r\n    this.marsupilami = new Marsupilami();\r\n    this.marsupilami.login = formValues.login;\r\n    this.marsupilami.mdp = formValues.mdp;\r\n    this.marsupilami.date_naissance = formValues.date_naissance;\r\n    this.marsupilami.famille = formValues.famille;\r\n    this.marsupilami.race = formValues.race;\r\n    this.marsupilami.nourriture = formValues.nourriture;\r\n    this.marsupilami.friend_ids = [];\r\n    this.marsupilamiService.addMarsupilami(this.marsupilami).subscribe((newUser) => {\r\n      const credentials = {\r\n        login: this.marsupilami.login,\r\n        mdp: this.marsupilami.mdp\r\n      };\r\n      if (this.currentUser) {\r\n        this.friendService.addFriend(newUser).subscribe(() => {\r\n          this.authenticationService.emitCredentials();\r\n        });\r\n        this.route.navigate(['marsupilamis']);\r\n      } else {\r\n        this.authenticationService.login(credentials).subscribe((result) => {\r\n          this.marsupilami = result;\r\n          this.authenticationService.currentUser = this.marsupilami;\r\n          this.authenticationService.emitCredentials();\r\n          this.route.navigate(['marsupilamis']);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Marsupilami } from './marsupilami';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarsupilamiService {\r\n\r\n  private marsupilamis: Marsupilami[];\r\n  private apiUrl = '/api/marsupilamis';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMarsupilamis(): Observable<Marsupilami[]> {\r\n    return this.http.get<Marsupilami[]>(`${this.apiUrl}`);\r\n  }\r\n\r\n  addMarsupilami(newMarsupilami: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}`, newMarsupilami);\r\n  }\r\n\r\n  editMarsupilami(updatedMarsupilami: Marsupilami): Observable<Marsupilami> {\r\n    return this.http.put<Marsupilami>(`${this.apiUrl}/${updatedMarsupilami._id}`, updatedMarsupilami);\r\n  }\r\n\r\n  getMarsupilami(idRecherche: string): Observable<Marsupilami> {\r\n    return this.http.get<Marsupilami>(`${this.apiUrl}/${idRecherche}`);\r\n  }\r\n\r\n  deleteMarsupilami(marsupilami: Marsupilami): Observable<any> {\r\n    const idASupprimer = marsupilami._id;\r\n    return this.http.delete(`${this.apiUrl}/${idASupprimer}`);\r\n  }\r\n\r\n}\r\n","export class Marsupilami {\r\n    _id: any;\r\n    login: string;\r\n    mdp: string;\r\n    date_naissance: string;\r\n    famille: string;\r\n    race: string;\r\n    nourriture: string;\r\n    friend_ids: Array<any>;\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"red\\\">\\r\\n  Erreur 404: Impossible de trouver la page!\\r\\n</h1>\\r\\n<p>Redirection dans {{ seconds }} seconde<span *ngIf=\\\"seconds > 1\\\">s</span>... </p>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n  seconds = 5;\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      this.autoRedirect();\r\n    }, 5000);\r\n    interval(1000).subscribe(() => {\r\n      this.seconds -= 1;\r\n    });\r\n  }\r\n\r\n  autoRedirect() {\r\n    this.route.navigate(['']);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}