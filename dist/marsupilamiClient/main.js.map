{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/friend-list/friend-list.component.css","webpack:///./src/app/friend-list/friend-list.component.html","webpack:///./src/app/friend-list/friend-list.component.ts","webpack:///./src/app/friend.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/marsupilami-details/marsupilami-details.component.css","webpack:///./src/app/marsupilami-details/marsupilami-details.component.html","webpack:///./src/app/marsupilami-details/marsupilami-details.component.ts","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.css","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.html","webpack:///./src/app/marsupilami-edit/marsupilami-edit.component.ts","webpack:///./src/app/marsupilami-list/marsupilami-list.component.css","webpack:///./src/app/marsupilami-list/marsupilami-list.component.html","webpack:///./src/app/marsupilami-list/marsupilami-list.component.ts","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.css","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.html","webpack:///./src/app/marsupilami-registration/marsupilami-registration.component.ts","webpack:///./src/app/marsupilami.service.ts","webpack:///./src/app/marsupilami.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { MarsupilamiDetailsComponent } from './marsupilami-details/marsupilami-details.component';\nimport { MarsupilamiListComponent } from './marsupilami-list/marsupilami-list.component';\nimport { MarsupilamiEditComponent } from './marsupilami-edit/marsupilami-edit.component';\nimport { MarsupilamiRegistrationComponent } from './marsupilami-registration/marsupilami-registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { FriendListComponent } from './friend-list/friend-list.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'registration', component: MarsupilamiRegistrationComponent },\n  { path: 'edit_marsupilami/:id', component: MarsupilamiEditComponent },\n  { path: 'marsupilamis', component: MarsupilamiListComponent },\n  { path: 'amis', component: FriendListComponent },\n  { path: 'marsupilamis/:id', component: MarsupilamiDetailsComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper lime lighten-2\\\">\\n    <app-header></app-header>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Marsupilami } from './marsupilami';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'marsupilamiClient';\n  currentUser: Marsupilami;\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MarsupilamiService } from './marsupilami.service';\nimport { MarsupilamiListComponent } from './marsupilami-list/marsupilami-list.component';\nimport { MarsupilamiDetailsComponent } from './marsupilami-details/marsupilami-details.component';\nimport { MarsupilamiEditComponent } from './marsupilami-edit/marsupilami-edit.component';\nimport { MarsupilamiRegistrationComponent } from './marsupilami-registration/marsupilami-registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './header/header.component';\nimport { FriendListComponent } from './friend-list/friend-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MarsupilamiListComponent,\n    MarsupilamiDetailsComponent,\n    MarsupilamiEditComponent,\n    MarsupilamiRegistrationComponent,\n    LoginComponent,\n    NotFoundComponent,\n    HeaderComponent,\n    FriendListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ MarsupilamiService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { Marsupilami } from './marsupilami';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  isAuth;\n  isAuthChange: Subject<boolean> = new Subject<boolean>();\n  currentUser: Marsupilami;\n  isCurrentUser: Subject<Marsupilami> = new Subject<Marsupilami>();\n\n  private apiLogin = '/api/login';\n  private apiLogout = '/api/logout';\n  constructor(private http: HttpClient) {\n    this.isAuthChange.subscribe((value) => {\n      this.isAuth = value;\n    });\n    this.isCurrentUser.subscribe((value) => {\n      this.currentUser = value;\n    });\n   }\n\n  login(body: any): Observable<any> {\n    this.isAuth = true;\n    this.isAuthChange.next(this.isAuth);\n    return this.http.post(`${this.apiLogin}`, body);\n  }\n\n  logout() {\n    this.isAuth = false;\n    this.isAuthChange.next(this.isAuth);\n    this.isCurrentUser.next(null);\n    return this.http.get(`${this.apiLogout}`);\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"collection\\\" *ngFor=\\\"let m of friends | async\\\">\\n  <li class=\\\"collection-item avatar\\\">\\n    <span class=\\\"title\\\">Nom: {{ m.login }}</span>\\n    <p>Famille: {{ m.famille }}<br>\\n      Race: {{ m.race }}<br>\\n      Nourriture: {{ m.nourriture }}<br>\\n    </p>\\n    <a [routerLink]=\\\"['/marsupilamis/', m._id]\\\" class=\\\"btn-floating btn-large waves-effect waves-light lime lighten-2\\\">Voir</a>\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Marsupilami } from '../marsupilami';\nimport { FriendService } from '../friend.service';\n\n@Component({\n  selector: 'app-friend-list',\n  templateUrl: './friend-list.component.html',\n  styleUrls: ['./friend-list.component.css']\n})\nexport class FriendListComponent implements OnInit {\n  friends: Observable<Marsupilami[]>;\n  constructor(private friendService: FriendService) { }\n\n  ngOnInit() {\n    this.getFriends();\n  }\n  getFriends(): any {\n    this.friends = this.friendService.getFriends();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Marsupilami } from './marsupilami';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FriendService {\n  private friends: Marsupilami[];\n  private apiFriends = '/api/amis';\n  constructor(private http: HttpClient) { }\n\n\n  getFriends(): Observable<Marsupilami[]> {\n    return this.http.get<Marsupilami[]>(`${this.apiFriends}`);\n  }\n\n  addFriend(newMarsupilami: any): Observable<any> {\n    return this.http.post(`${this.apiFriends}/${newMarsupilami._id}`, newMarsupilami);\n  }\n\n  deleteFriend(marsupilami: Marsupilami): Observable<Marsupilami> {\n    return this.http.delete<Marsupilami>(`${this.apiFriends}/${marsupilami._id}`);\n  }\n\n}\n","module.exports = \".logo {\\n    height: 50px;\\n    width: 50px;\\n}\"","module.exports = \"<a ref=\\\"#!\\\" class=\\\"brand-logo left\\\"><img class=\\\"logo \\\"src=\\\"../../assets/images/marsupilami.png\\\"/></a>\\n<a href=\\\"#!\\\" class=\\\"brand-logo center\\\">MarsupilAmi</a>\\n<ul class=\\\"right hide-on-med-and-down\\\">\\n  <li><a routerLink=\\\"/login\\\" *ngIf=\\\"!isAuth\\\">Login</a></li>\\n  <li><a (click)=\\\"onLogout()\\\" *ngIf=\\\"isAuth\\\">Logout</a></li>\\n  <li><a routerLink=\\\"/registration\\\" *ngIf=\\\"!isAuth\\\">Inscription</a></li>\\n  <li><a routerLink=\\\"/marsupilamis/{{ currentUser._id }}\\\" *ngIf=\\\"isAuth\\\">{{currentUser.login}}</a></li>\\n  <li><a routerLink=\\\"/edit_marsupilami/{{ currentUser._id }}\\\" *ngIf=\\\"isAuth\\\">Editer</a></li>\\n  <li><a routerLink=\\\"/amis\\\" *ngIf=\\\"isAuth\\\">Amis</a></li>\\n  <li><a routerLink=\\\"/marsupilamis\\\" *ngIf=\\\"isAuth\\\">Marsupilamis</a></li>\\n</ul>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router } from '@angular/router';\nimport { Marsupilami } from '../marsupilami';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: Marsupilami;\n  isAuth: boolean;\n\n\n  constructor(private authService: AuthenticationService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.getLogginStatus();\n    this.getCurrentUser();\n  }\n\n  getLogginStatus() {\n    this.authService.isAuthChange.subscribe((value) => {\n      this.isAuth = value;\n    });\n  }\n\n  getCurrentUser() {\n    this.authService.isCurrentUser.subscribe((value) => {\n      this.currentUser = value;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"center-align\\\">\\n  <h2 class=\\\"lime lighten-2 z-depth-3\\\">Connexion: </h2>\\n  <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"login\\\">Login:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\n        id=\\\"login\\\" formControlName=\\\"login\\\">\\n      <div *ngIf=\\\"!marsuForm.controls.login.valid && marsu.controls.login.dirty\\\">\\n        Utilisateur inconnu\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mdp\\\">Mot de passe: </label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\n    </div>\\n    <button class=\\\"btn waves-effect waves-light pulse lime darken-2\\\" type=\\\"submit\\\" name=\\\"action\\\" [disabled]=\\\"!marsuForm.valid\\\">\\n      Login\\n    </button>\\n  </form>\\n</div>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Marsupilami } from '../marsupilami';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MarsupilamiService } from '../marsupilami.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isAuth: boolean;\n  credentials: any;\n  marsupilami: Marsupilami;\n  marsuForm: FormGroup;\n\n  constructor(public marsupilamiService: MarsupilamiService,\n    public authenticationService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private route: Router) { }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.marsuForm = this.formBuilder.group({\n      login: ['', Validators.required],\n      mdp: ['', Validators.required],\n    });\n  }\n\n  login() {\n    const formValues = this.marsuForm.value;\n    this.credentials = {\n    login: formValues.login,\n    mdp: formValues.mdp\n    };\n    this.authenticationService.login(this.credentials).subscribe((result) => {\n      this.marsupilami = result;\n      this.authenticationService.isCurrentUser.next(this.marsupilami);\n      this.route.navigate(['marsupilamis']);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"!marsupilami\\\">Chargement en cours...</p>\\n<div class=\\\"card big\\\" *ngIf=\\\"marsupilami\\\">\\n  <div class=\\\"card-content\\\">\\n    <h4 class=\\\"lime lighten-2\\\">Détails sur le Marsupilami:</h4>\\n    <span class=\\\"card-title\\\">Nom: {{ marsupilami.login }}</span>\\n    <p>Famille: {{ marsupilami.famille }}</p>\\n    <p>Race: {{ marsupilami.race}}</p>\\n    <p>Nourriture: {{ marsupilami.nourriture}}</p>\\n    <div class=\\\"card-action\\\">\\n      <a routerLink=\\\"/marsupilamis\\\" class=\\\"btn btn-lg btn-primary center-align\\\">\\n        Retour\\n      </a>\\n      <button (click)=\\\"addFriend(marsupilami)\\\" class=\\\"btn btn-lg btn-primary center-align\\\">\\n        Ajouter\\n      </button>\\n      <button (click)=\\\"deleteFriend(marsupilami)\\\" class=\\\"btn btn-lg btn-primary center-align\\\">\\n        Supprimer\\n        </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Marsupilami } from '../marsupilami';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MarsupilamiService } from '../marsupilami.service';\nimport { FriendService } from '../friend.service';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-marsupilami-details',\n  templateUrl: './marsupilami-details.component.html',\n  styleUrls: ['./marsupilami-details.component.css']\n})\nexport class MarsupilamiDetailsComponent implements OnInit {\n  currentUser: Marsupilami;\n  marsupilami: Marsupilami;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthenticationService,\n    private marsupilamiService: MarsupilamiService,\n    private friendService: FriendService) { }\n\n  ngOnInit() {\n    this.getMarsuDetails();\n    this.getCurrentUser();\n    console.log(this.currentUser);\n  }\n\n  getMarsuDetails() {\n    this.route.params.subscribe(\n      params => this.marsupilamiService.getMarsupilami(params['id']).subscribe(\n        (data) => this.marsupilami = data\n      )\n    );\n  }\n\n  getCurrentUser() {\n    this.authService.isCurrentUser.subscribe((value) => {\n      this.currentUser = value;\n    });\n  }\n\n  addFriend(marsupilami: any) {\n    this.friendService.addFriend(marsupilami).subscribe(\n      (data) => this.marsupilami = data\n    );\n    this.router.navigate(['amis']);\n  }\n\n  deleteFriend(marsupilami: any) {\n    this.friendService.deleteFriend(marsupilami).subscribe(\n      (data) => this.marsupilami = data\n    );\n    this.router.navigate(['amis']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"center-align\\\">\\n  <h2 class=\\\"teal z-depth-3\\\">Inscription</h2>\\n  <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"editMarsupilami()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"login\\\">Login:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\n        id=\\\"login\\\" formControlName=\\\"login\\\">\\n      <div *ngIf=\\\"!marsuForm.controls.login.valid && marsuForm.controls.login.dirty\\\">\\n        Le nom du Marsupilami est obligatoire!\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mdp\\\">Mot de passe: </label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\n    </div>\\n    <div *ngIf=\\\"!marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty\\\">\\n      Le mot de passe est obligatoire!\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"date_naissance\\\">Date de Naissance:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"date_naissance\\\" formControlName=\\\"date_naissance\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"famille\\\">Famille: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"famille\\\" formControlName=\\\"famille\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"race\\\">Race :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"race\\\" formControlName=\\\"race\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"nourriture\\\">Nourriture: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nourriture\\\" formControlName=\\\"nourriture\\\">\\n    </div>\\n    <button class=\\\"btn waves-effect waves-light pulse\\\" type=\\\"submit\\\" name=\\\"action\\\" [disabled]=\\\"!marsuForm.valid\\\">\\n      Modifier\\n    </button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Marsupilami } from '../marsupilami';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MarsupilamiService } from '../marsupilami.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-marsupilami-edit',\n  templateUrl: './marsupilami-edit.component.html',\n  styleUrls: ['./marsupilami-edit.component.css']\n})\nexport class MarsupilamiEditComponent implements OnInit {\n  marsupilami: Marsupilami;\n  marsupilami_id: any;\n  marsuForm: FormGroup;\n\n  constructor(public marsupilamiService: MarsupilamiService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.getMarsupilamisDetails();\n  }\n  getMarsupilamisDetails(): any {\n    this.route.params.subscribe(\n      params => this.marsupilamiService.getMarsupilami(params['id']).subscribe(\n        (data) => {\n          this.marsupilami_id = data._id;\n          this.marsuForm.controls['login'].setValue(data.login);\n          this.marsuForm.controls['mdp'].setValue(data.mdp);\n          this.marsuForm.controls['famille'].setValue(data.famille);\n          this.marsuForm.controls['date_naissance'].setValue(data.date_naissance);\n          this.marsuForm.controls['race'].setValue(data.race);\n          this.marsuForm.controls['nourriture'].setValue(data.nourriture);\n        }\n      ));\n  }\n\n  initializeForm() {\n    this.marsuForm = this.formBuilder.group({\n      login: ['', Validators.required],\n      mdp: ['', Validators.required],\n      date_naissance: ['', Validators.required],\n      famille: ['', Validators.required],\n      race: ['', Validators.required],\n      nourriture: ['', Validators.required],\n    });\n  }\n  editMarsupilami() {\n    const formValues = this.marsuForm.value;\n    this.marsupilami = new Marsupilami();\n    this.marsupilami._id = this.marsupilami_id;\n    this.marsupilami.login = formValues.login;\n    this.marsupilami.mdp = formValues.mdp;\n    this.marsupilami.date_naissance = formValues.date_naissance;\n    this.marsupilami.famille = formValues.famille;\n    this.marsupilami.race = formValues.race;\n    this.marsupilami.nourriture = formValues.nourriture;\n    this.marsupilamiService.editMarsupilami(this.marsupilami).subscribe(() => {\n        this.router.navigate(['marsupilamis']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"collection\\\" *ngFor=\\\"let m of marsupilamis | async\\\">\\n  <li class=\\\"collection-item avatar\\\">\\n    <span class=\\\"title\\\">Nom: {{ m.login }}</span>\\n    <p>Famille: {{ m.famille }}<br>\\n      Race: {{ m.race }}<br>\\n      Nourriture: {{ m.nourriture }}<br>\\n    </p>\\n    <a [routerLink]=\\\"['/marsupilamis/', m._id]\\\" class=\\\"btn-floating btn-large waves-effect waves-light lime lighten-2\\\">Voir</a>\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Marsupilami } from '../marsupilami';\nimport { MarsupilamiService } from '../marsupilami.service';\n\n@Component({\n  selector: 'app-marsupilami-list',\n  templateUrl: './marsupilami-list.component.html',\n  styleUrls: ['./marsupilami-list.component.css']\n})\nexport class MarsupilamiListComponent implements OnInit {\n  marsupilamis: Observable<Marsupilami[]>;\n  constructor(private marsupilamiService: MarsupilamiService) { }\n\n  ngOnInit() {\n    this.getMarsupilamis();\n  }\n  getMarsupilamis(): any {\n    this.marsupilamis = this.marsupilamiService.getMarsupilamis();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"center-align\\\">\\n  <h2 class=\\\"lime lighten-2 z-depth-3\\\">Inscription</h2>\\n  <form [formGroup]=\\\"marsuForm\\\" (ngSubmit)=\\\"addMarsupilami()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"login\\\">Login:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.login.valid && marsuForm.controls.login.dirty }\\\"\\n        id=\\\"login\\\" formControlName=\\\"login\\\">\\n      <div *ngIf=\\\"!marsuForm.controls.login.valid && marsuForm.controls.login.dirty\\\">\\n        Le nom du Marsupilami est obligatoire!\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"mdp\\\">Mot de passe: </label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"mdp\\\" formControlName=\\\"mdp\\\" [ngClass]=\\\"{ 'invalid': !marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty }\\\">\\n    </div>\\n    <div *ngIf=\\\"!marsuForm.controls.mdp.valid && marsuForm.controls.mdp.dirty\\\">\\n      Le mot de passe est obligatoire!\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"date_naissance\\\">Date de Naissance:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"date_naissance\\\" formControlName=\\\"date_naissance\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"famille\\\">Famille: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"famille\\\" formControlName=\\\"famille\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"race\\\">Race :</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"race\\\" formControlName=\\\"race\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"nourriture\\\">Nourriture: </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nourriture\\\" formControlName=\\\"nourriture\\\">\\n    </div>\\n    <button class=\\\"btn waves-effect waves-light pulse\\\" type=\\\"submit\\\" name=\\\"action\\\" [disabled]=\\\"!marsuForm.valid\\\">\\n      Inscription\\n    </button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Marsupilami } from '../marsupilami';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MarsupilamiService } from '../marsupilami.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'app-marsupilami-registration',\n  templateUrl: './marsupilami-registration.component.html',\n  styleUrls: ['./marsupilami-registration.component.css']\n})\nexport class MarsupilamiRegistrationComponent implements OnInit {\n  marsupilami: Marsupilami;\n  marsuForm: FormGroup;\n\n  constructor(public marsupilamiService: MarsupilamiService,\n    public authenticationService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private route: Router) { }\n\n  ngOnInit() {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.marsuForm = this.formBuilder.group({\n      login: ['', Validators.required],\n      mdp: ['', Validators.required],\n      date_naissance: ['', Validators.required],\n      famille: ['', Validators.required],\n      race: ['', Validators.required],\n      nourriture: ['', Validators.required],\n    });\n  }\n  addMarsupilami() {\n    const formValues = this.marsuForm.value;\n    this.marsupilami = new Marsupilami();\n    this.marsupilami.login = formValues.login;\n    this.marsupilami.mdp = formValues.mdp;\n    this.marsupilami.date_naissance = formValues.date_naissance;\n    this.marsupilami.famille = formValues.famille;\n    this.marsupilami.race = formValues.race;\n    this.marsupilami.nourriture = formValues.nourriture;\n    this.marsupilami.friend_ids = [];\n    this.marsupilamiService.addMarsupilami(this.marsupilami).subscribe(() => {\n      const credentials = {\n        login: this.marsupilami.login,\n        mdp: this.marsupilami.mdp\n      };\n      this.authenticationService.login(credentials).subscribe(() => {\n        this.route.navigate(['marsupilamis']);\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Marsupilami } from './marsupilami';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarsupilamiService {\n\n  private marsupilamis: Marsupilami[];\n  private apiUrl = '/api/marsupilamis';\n  constructor(private http: HttpClient) { }\n\n  getMarsupilamis(): Observable<Marsupilami[]> {\n    return this.http.get<Marsupilami[]>(`${this.apiUrl}`);\n  }\n\n  addMarsupilami(newMarsupilami: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}`, newMarsupilami);\n  }\n\n  editMarsupilami(updatedMarsupilami: Marsupilami): Observable<Marsupilami> {\n    return this.http.put<Marsupilami>(`${this.apiUrl}/${updatedMarsupilami._id}`, updatedMarsupilami);\n  }\n\n  getMarsupilami(idRecherche: string): Observable<Marsupilami> {\n    return this.http.get<Marsupilami>(`${this.apiUrl}/${idRecherche}`);\n  }\n\n  deleteMarsupilami(marsupilami: Marsupilami): Observable<any> {\n    const idASupprimer = marsupilami._id;\n    return this.http.delete(`${this.apiUrl}/${idASupprimer}`);\n  }\n\n}\n","export class Marsupilami {\n    _id: any;\n    login: string;\n    mdp: string;\n    date_naissance: string;\n    famille: string;\n    race: string;\n    nourriture: string;\n    friend_ids: Array<any>;\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"red\\\">\\n  Erreur 404: Impossible de trouver la page!\\n</h1>\\n<p>Redirection dans {{ seconds }} seconde<span *ngIf=\\\"seconds > 1\\\">s</span>... </p>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n  seconds = 5;\n  constructor(private route: Router) { }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.autoRedirect();\n    }, 5000);\n    interval(1000).subscribe(() => {\n      this.seconds -= 1;\n    });\n  }\n\n  autoRedirect() {\n    this.route.navigate(['']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}